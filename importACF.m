function [AtomIdx,X,Y,Z,CHARGE,MIN,DIST,ATOMIC,VOL] = importACF(filename, nAtoms)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [VARNAME1,X,Y,Z,CHARGE,MIN,DIST,ATOMIC,VOL] = IMPORTFILE(FILENAME)
%   Reads data from text file FILENAME for the default selection.
%
%   [VARNAME1,X,Y,Z,CHARGE,MIN,DIST,ATOMIC,VOL] = IMPORTFILE(FILENAME,
%   STARTROW, ENDROW) Reads data from rows STARTROW through ENDROW of text
%   file FILENAME.
%
% Example:
%   [VarName1,X,Y,Z,CHARGE,MIN,DIST,ATOMIC,VOL] = importfile('ACF.dat',3, 14);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2017/08/07 16:41:59

%% Initialize variables.
delimiter = ' ';
startRow = 3;
endRow = startRow + nAtoms;


%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: text (%s)
%   column9: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%s%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'MultipleDelimsAsOne', true, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
AtomIdx = dataArray{:, 1};
X = dataArray{:, 2};
Y = dataArray{:, 3};
Z = dataArray{:, 4};
CHARGE = dataArray{:, 5};
MIN = dataArray{:, 6};
DIST = dataArray{:, 7};
ATOMIC = dataArray{:, 8};
VOL = dataArray{:, 9};


